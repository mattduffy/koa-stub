<main>
  <article>
    <h1>Blog: <%= blog.name %></h1>
    <% if (view.message) { %>
    <div id="messages" class="messages">
      <span><%= view.message %></span>
    </div>
    <% } %>
    <% if (view.error) { %>
    <div id="errors" class="errors">
      <span><%= view.error%></span>
    </div>
    <% } %>
    <div class="blog">
      <form name="edit" id="edit_Id" action="/account/blog/<%= blog.id %>" method="POST" enctype="multipart/form-data">
        <fieldset>
          <legend>Your blog details</legend>
          <div id="blogUpdateMsg" class="messages hidden"></div>
          <div id="blogUpdateErr" class="errors hidden"></div>
          <input type="hidden" name="csrf-token" id="csrf-token_Id" value="<%= csrfToken %>" required>
          <input type="hidden" name="blogId" id="blogId_Id" value="<%= blog.id %>" required>
          <label for="blogTitle_Id">Blog Title:</label>
          <input type="text" name="blogTitle" id="blogTitle_Id" value="<%= blog.name %>" tabindex="1">
          <br>
          <label for="blogDescription_Id">Blog Description:</label>
          <textarea id="blogDescription_Id" name="blogDescription" rows="3" cols="50" tabindex="1"><%= blog.description %></textarea>
          <label for="blogKeywords_Id">Blog Keywords:</label>
          <input type="text" name="blogKeywords" id="blogKeywords_Id" value="<%= blog.keywords%>" tabindex="1">
          <br>
          <label for="blogPublic">Public:</label>
          <input type="checkbox" name="blogPublic" id="blogPublic_Id" <%= (blog.public) ? 'checked' : '' %> tabindex="1">
          <br>
          <input type="submit" name="submit" id="submit_Id" value="Update Blog" tabindex="6">
          <input type="reset" name="reset" id="reset_Id" value="Reset" tabindex="7">
        </fieldset>
      </form>
      <script nonce="<%= nonce %>">
        const origin = '<%= origin %>'
        const jwtAccess = '<%= jwtAccess %>'
        window.forms = document.forms
        const blogForm = forms.namedItem('edit')
        async function editBlogDetails(e) {
          e.preventDefault()
          e.stopPropagation()
          blogForm.elements.submit.disabled = true
          const formData = new FormData()
          const csrfToken = blogForm.elements['csrf-token']
          formData.append('csrfTokenHidden', csrfToken.value)
          const blogId = blogForm.elements['blogId']
          if (blogId.value !== '') {
            formData.append('id', blogId.value)
          }
          const blogTitle = blogForm.elements['blogTitle']
          formData.append('title', blogTitle.value)
          const blogDescription = blogForm.elements['blogDescription']
          formData.append('description', blogDescription.value)
          const blogKeywords = blogForm.elements['blogKeywords']
          formData.append('keywords', blogKeywords.value)
          const blogPublic = blogForm.elements['blogPublic']
          formData.append('public', (blogPublic.checked) ? 'true' : 'false')
          const opts = {
            method: 'POST',
            headers: {
              Accept: 'application/json',
              Authorization: `Bearer ${jwtAccess}`
            },
            body: formData,
          }
          const request = new Request(`${origin}/account/blog/edit`, opts)
          let response
          let blogJson
          try {
            response = await fetch(request, { credentials: 'same-origin' })
            console.log(response)
            if (!response.ok) {
              console.info('fetch failed')
              console.error(response)
              blogForm.elements['submit'].disabled = false
            } else if (response.status > 200) {
              const err = document.querySelector('div#blogUpdateErr')
              err.textContent = 'Update failed for some reason.'
              err.classList.remove('hidden')
              console.error(blogJson)
              setTimeout(() => {
                err.classList.add('hidden')
                err.textContent = ''
                blogForm.elements['submit'].disabled = false
                blogForm.elements['reset'].click()
              }, 5000)
            } else {
              blogJson = await response.json() 
              console.log(blogJson)
              const msg = document.querySelector('div#blogUpdateMsg')
              msg.textContent = 'Blog details saved.'
              msg.classList.remove('hidden')
              console.log(msg)
              setTimeout(() => {
                blogForm.elements['submit'].disabled = false
                msg.classList.add('hidden')
                msg.textContent = ''
              }, 5000) 
            }
          } catch (e) {
            console.error(e)
          }
          console.log('finished')
        }
        blogForm.addEventListener('submit', editBlogDetails)
      </script>
    </div>
    <div id="posts">
      <% if (posts.length > 0) {
        post.forEach((p, i) => { %>

        <% })
      } else { %>
      <h1>No blog posts created yet.</h1>
      <a href="">Create a new post.</a>
      <% } %>
    </div>

  </article>
</main>

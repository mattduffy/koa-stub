<main>
  <article>
    <h1>Your Galleries</h1>
    <% if (view.message) { %>
    <div id="messages" class="messages">
      <span><%= view.message %></span>
    </div>
    <% } %>
    <% if (view.error) { %>
    <div id="errors" class="errors">
      <span><%= view.error%></span>
    </div>
    <% } %>
    <div class="add-gallery">
      <h2>Upload a new gallery archive.</h2>
      <form name="uploader" id="uploader_Id" action="/account/gallery/upload/archive" method="POST" enctype="multipart/form-data">
        <fieldset>
          <legend>Select an archive</legend>
          <input type="hidden" name="csrf-token" id="csrf-token_Id" value="<%= csrfToken %>" required>
          <input type="file" name="archive" id="archive_Id" accept="application/gzip, application/x-tar, application/x-rar, application/zip" tabindex="1" required>
          <br>
          <label for="description_Id">Album Description:</label>
          <input type="text" name="description" id="description_Id" value="" size="80" tabindex="2">
          <br>
          <label for="name_Id">Album Name:</label>
          <input type="text" name="name" id="name_Id" value="" size="80" tabindex="3">
          <br>
          <label for="public_Id">Make Public:</label>
          <input type="checkbox" name="public" id="public_Id" tabindex="4">
          <br>
          <input type="submit" name="submit" id="submit_Id" value="Upload" tabindex="5">
          <input type="reset" name="reset" id="reset_Id" value="Clear" tabindex="6">
        </fieldset>
      </form>
      <script nonce="<%= nonce %>">
        const origin = '<%= origin %>'
        const jwtAccess = '<%= jwtAccess %>'
        const form = document.forms[0]
        async function uploadArchive(e) {
          e.preventDefault()
          e.stopPropagation()
          const file = form.elements.archive
          if (file.files.length === 0) {
            return
          }
          const formData = new FormData()
          const csrfToken = form.elements['csrf-token']
          formData.append('methodOverride', 'PUT')
          formData.append('csrfTokenHidden', csrfToken.value)
         if (form.elements['name'].value !== '') {
            const albumName = form.elements['name']
            formData.append('albumName', albumName.value)
          }
         if ( form.elements['description'].value !== '') {
            const albumDescription = form.elements['description']
            formData.append('albumDescription', albumDescription.value)
            const albumPublic = form.elements['public']
            formData.append('albumPublic', albumPublic.checked)
          } formData.append('archive', file.files[0])
          const opts = {
            method: 'PUT',
            headers: {
              Accept: 'application/json',
              Authorization: `Bearer ${jwtAccess}`,
            },
            body: formData,
          }
          const request = new Request(`${origin}/account/galleries/add`, opts)
          console.dir(request)
          const response = await fetch(request, { credentials: 'same-origin' })
          if (!response.ok) {
            console.error(response.statusText)
          } else {
            const newAlbum = await response.json()
            if (newAlbum.status > 200) {
              console.error(newAlbum)
            } else {
              console.log(newAlbum)
              const li = document.createElement('li')
              const a = document.createElement('a')
              // a.href = newAlbum.albumUrl
              a.href = `${origin}/account/galleries/${newAlbum.albumId}`
              a.textContent = newAlbum.albumName
              li.appendChild(a)
              if (newAlbum.public) {
                document.querySelector('ul#public').appendChild(li) 
              } else {
                document.querySelector('ul#private').appendChild(li)
              }
            }
          }
        }
        form.addEventListener('submit', uploadArchive) 
      </script>
    </div>
    <div class="existing-galleries">
      <h2>Current Public Galleries</h2>
      <% if (public.length > 0) { %>
      <ul id="public" class="public">
        <% public.forEach((g) => { %>
        <li><a href="<%= origin %>/account/galleries/<%= g.id %>"><%= g.name %></a></li>
        <% }) %>
      </ul>
    <% } else { %>
      <p>No public galleries created yet.</p>
    <% } %>
      <h2>Current Private Galleries</h2>
      <% if (private.length > 0) { %>
      <ul id="private" class="private">
        <% private.forEach((g) => { %>
        <li><a href="<%= origin %>/account/galleries/<%= g.id %>"><%= g.name %></a></li>
        <% }) %>
      </ul>
    <% } else { %>
      <p>No private galleries created yet.</p>
    <% } %>
    </div>
  </article>
</main>

